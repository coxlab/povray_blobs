% ##########################################################################################################
%
%                    ResizeBlobRatStims
%         
% ##########################################################################################################
%
%  Sum all the views of the blobs (Stim 1 and 2), find the boundaries, then
%  crop each image (view) to these boundaries
%
%   Author: davide
%
%   NOTE:   for the program to work the images must be grayscale !!!!!
%           If the images to convert were generated by running the PEARL script Script_StimBlob.pl that,
%           in turn, calls a POVray script, then these images are verly likely in RGB format. Therefore,
%           they must be first converted to grayscale using the Photoshop droplet "Convert to grayscale".
%
% ##########################################################################################################

function ResizeBlobRatStims

FlagPlotBoundaries = 1;

% Original rotations chosen for training D1 & D2
% RangeView = -90:15:90;
% New rotations for training D1 & D2 (finer steps)
RangeView = 0; %-90:5:90;
N_view = length(RangeView);

% #######################################################################
% Find the boundaries of the image resulting from averaging all views of
% both stimuli
% #######################################################################
IdxImg = 1;
% Loop on all stimuli
for Stim = 1:2
    BaseName = ['FACE_', num2str(Stim) ,'_CamRot_y'];
%     BaseName = ['Blob_', num2str(Stim) ,'_CamRot_y'];
    % Loop on all ViewPoints
    for v = RangeView 

        % Load image at right viewpoint
        Image2Load = [BaseName, num2str(v), '.png'];
        [img map] = imread( Image2Load );

        % Build stack matrix with all transformaitons
        img_stack(IdxImg,:,:) = img;

        IdxImg = IdxImg+1;
    end; %for v
end; %for Stim

%  img_av = uint8( squeeze( mean(img_stack,1) ) );
img_av = uint8( squeeze( sum(img_stack,1) ) );
figure;
imshow(img_av);
map=gray(256);
colormap(map);
title('Average image');

% Find image boundaries
[col_bounds, row_bounds] = FindImageBoundingBox_call( img_av, FlagPlotBoundaries );


% #######################################################################
% Crop each image using the boundaries obtained above
% #######################################################################
xmin = col_bounds(1)-2;
ymin = row_bounds(1)-2;
width = col_bounds(2) - col_bounds(1) +4;
height = row_bounds(2) - row_bounds(1) +4;
rect = [xmin ymin width height];

% Loop on all stimuli
for Stim = 1:2
%     BaseName = ['Blob_', num2str(Stim) ,'_CamRot_y'];
    BaseName = ['FACE_', num2str(Stim) ,'_CamRot_y'];
    % Loop on all ViewPoints
    for v = RangeView 

        % Load image at right viewpoint
        Image2Load = [BaseName, num2str(v), '.png'];
        [img map] = imread( Image2Load );
        
        img_crop = imcrop(img,rect);
%         OutName = ['Blob_N', num2str(Stim) ,'_CamRot_y', num2str(v), '.png'];
        OutName = ['FACE_N', num2str(Stim) ,'_CamRot_y', num2str(v), '.png'];
        h_f = figure;
        imshow(img_crop);
        imwrite( img_crop, OutName, 'png' ); 

        close(h_f);
        
    end; %for v
end; %for Stim





